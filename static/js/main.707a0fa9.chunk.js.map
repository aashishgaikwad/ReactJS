{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/Pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","backgroundColor","padding","borderBottom","textDecoration","_this","props","todo","completed","markComplete","e","react_default","a","createElement","style","this","type","onChange","bind","id","title","btnStyle","onClick","delTodo","Component","background","color","border","borderRadius","cursor","float","Todos","todos","map","TodoItem_TodoItem","key","Header","headerStyle","react_router_dom","linkStyle","to","textAlign","AddTodo","state","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","delete","concat","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","react_router","path","exact","render","AddTodo_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.707a0fa9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class TodoItem extends Component {\n    getStyle = () => {\n    //     if(this.props.todo.completed){\n    //     return {\n    //         textDecoration: 'line-through'\n    //     }\n    // }else{\n    //     return {\n    //         textDecoration: 'none'\n    //     }\n    // }\n    return {\n        backgroundColor: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ?'line-through' : 'none'\n    }\n}\n\n  markComplete = (e) => {\n      \n  }  \n    \n    render() {\n        return (\n            <div style={ this.getStyle() }>\n                <p>\n                <input type=\"checkbox\" onChange={this.props.markComplete.bind(this,this.props.todo.id)}/> \n                {' '}\n                {this.props.todo.title}\n                <button style={ btnStyle } \n                onClick={ this.props.delTodo.bind(this,this.props.todo.id)}>x</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n//PrppTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color:'#fff',\n    border:'none',\n    padding:'5px 8px',\n    borderRadius: '50%',\n    cursor:'pointer',\n    float:'right'\n}\n// const itemStyle = {\n//     backgroundColor: '#f4f4f4'\n// }","import React, { Component } from \"react\";\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} \n      markComplete={this.props.markComplete}\n      delTodo = {this.props.delTodo}/>\n    ));\n  }\n}\n//PrppTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n}\n\n\n\nexport default Todos;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nexport default function Header () {\n        return (\n            <header style={ headerStyle }>\n                <h1>TodoList</h1>\n                <Link style={linkStyle} to=\"/\">Home</Link> |   \n                <Link style={linkStyle} to=\"/about\"> About</Link>\n            </header>\n        )\n    }\n\nconst headerStyle = {\n    background:'#333',\n    padding:'10px',\n    color:'#fff',\n    textAlign:'center'\n}\n\nconst linkStyle = {\n    color:'#fff',\n    textDecoration:'none'\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class AddTodo extends Component {\n    state = {\n        title:''\n    }\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value\n        });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title:'' });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit} style={{ display:'flex' }}>\n               <input\n               type=\"text\"\n               name=\"title\"\n               placeholder=\"Add Todo...\"\n               value={this.state.title}\n               onChange={this.onChange}\n               style={{flex:'10', padding: '5px' }}\n               /> \n            <input\n               type=\"submit\"\n               value=\"Submit\"\n               className=\"btn\"\n               style={{flex:'1'}}\n               /> \n            </form>\n        )\n    }\n}\n//PrppTypes\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired,\n}","import React from 'react'\n\nexport default function About() {\n    return (\n        <React.Fragment>\n            <h1>About</h1>\n        </React.Fragment>\n    )\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/Pages/About\";\n// import uuid from \"uuid\";\n\nclass App extends Component {\n  state = {\n    todos: [\n      // {\n      //   id: uuid.v4(),\n      //   title: \"Take out the trash\",\n      //   completed: false\n      // },\n      // {\n      //   id: uuid.v4(),\n      //   title: \"Dinner with wife\",\n      //   completed: false\n      // },\n      // {\n      //   id: uuid.v4(),\n      //   title: \"Meeting with boss\",\n      //   completed: false\n      // }\n    ]\n  };\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=20\")\n      .then(res =>\n        this.setState({\n          todos: res.data\n        })\n      );\n  }\n  //Toggle complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n  //Delete todo\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n         .then(res => this.setState({\n          todos: [...this.state.todos.filter(todo => todo.id !== id)]\n        }) );\n    // this.setState({\n    //   todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    // });\n  };\n  //Add Todo\n  addTodo = title => {\n    // const newTodo = {\n    //   id: uuid.v4(),\n    //   title,\n    //   completed: false\n    // };\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/posts\", {\n        title,\n        completed: false\n      })\n      .then(res =>\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        })\n      );\n    // this.setState({\n    //   todos: [...this.state.todos, newTodo]\n    // });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route path=\"/\" exact render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}